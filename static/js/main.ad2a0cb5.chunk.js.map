{"version":3,"sources":["components/ControllerItem.module.css","components/Tag.module.css","components/TagsList.module.css","components/SuggestedControllerTags.module.css","components/ControllerForm.module.css","state/reducer.js","state/actions.js","state/state.js","state/index.js","hooks/useAvailableTagTitles.js","components/Tag.js","hooks/useGroupParentsPath.js","utils.js","components/TagsList.js","components/SuggestedControllerTags.js","components/ControllerItem.js","components/ControllersList.js","components/GroupsList.js","components/ControllerForm.js","components/App.js","hooks/useVisibleControllers.js","index.js"],"names":["module","exports","reducer","state","action","type","groups","parentGroup","parent_id","newGroup","id","title","children","controllers","group_id","console","log","tags","controller_id","targetCtrl","filter","tag","selectedGroupId","initState","GlobalStateCtx","createContext","GlobalStateProvider","stateAndReducer","useReducer","Provider","value","useGlobalState","useContext","useAvailableTagTitles","useMemo","titlesSet","map","c","t","reduce","acc","titles","forEach","add","Set","retrieveAllTagsStringsFromControllers","Tag","onClick","onClose","background","className","st","block","style","content","close","defaultMapFn","i","getGroupParentsPath","mapFn","path","cursor","currentGroup","push","randomId","Math","floor","random","getGroupControllersIds","groupId","group","subgroupsControllers","gid","collector","item","getGroupControllers","cid","g","TagsList","parentsPath","useGroupParentsPath","groupsIdsPath","groupId1","groupId2","groupId1Idx","indexOf","groupId2Idx","Error","groupsRelation","NewTagForm","canCreate","onCreate","$input","useRef","onSubmit","e","preventDefault","tagTitle","current","alert","ref","placeholder","SuggestedControllerTags","onSelect","availableTagTitles","assignedTitles","find","ControllerItem","controller","dispatch","ownerGroup","assignTagWithTitleToCtrl","controllerId","left","tagsHeading","right","ControllersList","GroupsList","topGroup","Object","values","Group","display","href","selectGroup","marginLeft","length","ControllerForm","App","selectedGroup","visibleControllers","useVisibleControllers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad2a0cb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ControllerItem_block__1WHjF\",\"title\":\"ControllerItem_title__1bT7Z\",\"left\":\"ControllerItem_left__34PHa\",\"right\":\"ControllerItem_right__2eqRu\",\"tagsHeading\":\"ControllerItem_tagsHeading__2lWv2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Tag_block__5qBnU\",\"content\":\"Tag_content__2_ZQ0\",\"close\":\"Tag_close__339Yh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"TagsList_block__1iSCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"SuggestedControllerTags_block__2eOL1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ControllerForm_block__4kv8-\"};","import {\n  CREATE_GROUP,\n  SELECT_GROUP,\n  CREATE_CONTROLLER,\n  CREATE_TAG,\n  REMOVE_TAG,\n} from './actions'\n\nexport function reducer(state, action) {\n  if (action.type === CREATE_GROUP) {\n    const { groups } = state\n    const parentGroup = groups[action.parent_id]\n    const newGroup = {\n      id: action.id,\n      title: action.title,\n      parent_id: action.parent_id,\n      children: [],\n      controllers: [],\n    }\n\n    return {\n      ...state,\n      groups: {\n        ...groups,\n        [action.parent_id]: {\n          ...parentGroup,\n          children: [...parentGroup.children, action.id],\n        },\n        [action.id]: newGroup,\n      },\n    }\n  }\n\n  if (action.type === CREATE_CONTROLLER) {\n    const { controllers, groups } = state\n    const parentGroup = groups[action.group_id]\n    console.log(parentGroup)\n\n    return {\n      ...state,\n      controllers: {\n        ...controllers,\n        [action.id]: {\n          id: action.id,\n          title: action.title,\n          group_id: action.group_id,\n          tags: [],\n        },\n      },\n      groups: {\n        ...groups,\n        [parentGroup.id]: {\n          ...parentGroup,\n          controllers: [...parentGroup.controllers, action.id],\n        },\n      },\n    }\n  }\n\n  if (action.type === CREATE_TAG) {\n    const { title, controller_id, group_id } = action\n    const targetCtrl = state.controllers[controller_id]\n\n    return {\n      ...state,\n      controllers: {\n        ...state.controllers,\n        [controller_id]: {\n          ...targetCtrl,\n          tags: [\n            ...targetCtrl.tags,\n            {\n              title,\n              controller_id,\n              group_id,\n            },\n          ],\n        },\n      },\n    }\n  }\n\n  if (action.type === REMOVE_TAG) {\n    const { title, controller_id } = action\n    const targetCtrl = state.controllers[controller_id]\n\n    return {\n      ...state,\n      controllers: {\n        ...state.controllers,\n        [controller_id]: {\n          ...targetCtrl,\n          tags: targetCtrl.tags.filter((tag) => tag.title !== title),\n        },\n      },\n    }\n  }\n\n  if (action.type === SELECT_GROUP) {\n    return {\n      ...state,\n      selectedGroupId: action.group_id,\n    }\n  }\n\n  return state\n}\n","export const CREATE_GROUP = 'CREATE_GROUP'\nexport const CREATE_CONTROLLER = 'CREATE_CONTROLLER'\nexport const CREATE_TAG = 'CREATE_TAG'\nexport const REMOVE_TAG = 'REMOVE_TAG'\nexport const SELECT_GROUP = 'SELECT_GROUP'\n\nexport const createGroup = (id, title, parentId) => ({\n  type: 'CREATE_GROUP',\n  id,\n  title,\n  parent_id: parentId,\n})\n\nexport const createController = (id, title, groupId) => ({\n  type: 'CREATE_CONTROLLER',\n  id,\n  title,\n  group_id: groupId,\n})\n\nexport const createTag = (title, controllerId, groupId) => ({\n  type: 'CREATE_TAG',\n  title,\n  controller_id: controllerId,\n  group_id: groupId,\n})\n\nexport const removeTagFromController = (title, controllerId) => ({\n  type: 'REMOVE_TAG',\n  controller_id: controllerId,\n  title,\n})\n\nexport const selectGroup = (groupId) => ({\n  type: 'SELECT_GROUP',\n  group_id: groupId,\n})\n","export const initState = {\n  selectedGroupId: 'group_id',\n  groups: {\n    group_id: {\n      id: 'group_id',\n      children: [],\n      title: 'Top group',\n      parent_id: null, // for non-top group it is id of the parent group\n      controllers: [],\n    },\n  },\n  controllers: {},\n}\n","import { createContext, useContext, useReducer } from 'react'\nimport { reducer } from './reducer'\nimport { initState } from './state'\n\nconst GlobalStateCtx = createContext()\n\nexport function GlobalStateProvider({ children }) {\n  const stateAndReducer = useReducer(reducer, initState)\n\n  return (\n    <GlobalStateCtx.Provider value={stateAndReducer}>\n      {children}\n    </GlobalStateCtx.Provider>\n  )\n}\n\nexport function useGlobalState() {\n  return useContext(GlobalStateCtx)\n}\n","import { useMemo } from 'react'\n\nexport function useAvailableTagTitles(controllers) {\n  return useMemo(() => retrieveAllTagsStringsFromControllers(controllers), [\n    controllers,\n  ])\n}\n\nfunction retrieveAllTagsStringsFromControllers(controllers) {\n  const titlesSet = controllers\n    .map((c) => c.tags.map((t) => t.title))\n    .reduce((acc, titles) => {\n      titles.forEach((title) => acc.add(title))\n      return acc\n    }, new Set())\n\n  return [...titlesSet]\n}\n","import st from './Tag.module.css'\n\nexport function Tag({ children, onClick, onClose, background }) {\n  return (\n    <span className={st.block} style={{ background }}>\n      <span className={st.content} onClick={() => onClick && onClick()}>\n        {children}\n      </span>\n      {onClose && <span className={st.close} onClick={() => onClose()} />}\n    </span>\n  )\n}\n","import { useGlobalState } from '../state'\n\nconst defaultMapFn = (i) => i\n\nexport function useGroupParentsPath(mapFn = defaultMapFn) {\n  const [{ selectedGroupId, groups }] = useGlobalState()\n\n  return getGroupParentsPath(selectedGroupId, groups, mapFn)\n}\n\nfunction getGroupParentsPath(selectedGroupId, groups, mapFn) {\n  const path = []\n  let cursor = selectedGroupId\n\n  while (true) {\n    const currentGroup = groups[cursor]\n    path.push(currentGroup)\n\n    if (!currentGroup.parent_id) break\n\n    cursor = currentGroup.parent_id\n  }\n\n  return path.map(mapFn)\n}\n","export const randomId = () => Math.floor(Math.random() * 10000000)\n\nexport const getGroupControllersIds = (groups, groupId) => {\n  const group = groups[groupId]\n  const subgroupsControllers = group.children\n    .map((gid) => getGroupControllersIds(groups, gid))\n    .reduce((collector, item) => {\n      return [...collector, ...item]\n    }, [])\n\n  return [...group.controllers, ...subgroupsControllers]\n}\n\nexport const getGroupControllers = ({\n  groups,\n  selectedGroupId,\n  controllers,\n}) => {\n  const controllersIds = getGroupControllersIds(groups, selectedGroupId)\n  return controllersIds.map((cid) => controllers[cid])\n}\n\nexport const groupsRelation = (groupsIdsPath, groupId1, groupId2) => {\n  const groupId1Idx = groupsIdsPath.indexOf(groupId1)\n  const groupId2Idx = groupsIdsPath.indexOf(groupId2)\n\n  if (groupId1 === -1) throw new Error('groupId1 is not in the ancestor path')\n  if (groupId2 === -1) throw new Error('groupId2 is not in the ancestor path')\n\n  if (groupId1Idx === groupId2Idx) return 0\n  if (groupId1Idx > groupId2Idx) return 1\n  return -1\n}\n","import { useRef } from 'react'\nimport { Tag } from './Tag'\nimport st from './TagsList.module.css'\nimport { useGroupParentsPath } from '../hooks/useGroupParentsPath'\nimport { useGlobalState } from '../state'\nimport { groupsRelation } from '../utils'\n\nconst groupId = (g) => g.id\n\nexport function TagsList({ tags, onClose }) {\n  const [{ selectedGroupId }] = useGlobalState()\n  const parentsPath = useGroupParentsPath(groupId)\n\n  return (\n    <div className={st.block}>\n      {tags.map((tag) => {\n        const canDelete =\n          groupsRelation(parentsPath, selectedGroupId, tag.group_id) >= 0\n        const close = canDelete ? () => onClose(tag) : null\n\n        return (\n          <Tag key={tag.title} onClose={close} background=\"crimson\">\n            {tag.title}\n          </Tag>\n        )\n      })}\n    </div>\n  )\n}\n\nexport function NewTagForm({ canCreate, onCreate }) {\n  const $input = useRef()\n\n  const tagCreated = (e) => {\n    e.preventDefault()\n    const tagTitle = $input.current.value\n\n    if (canCreate(tagTitle)) {\n      alert('Sorry such tag already exists on the controller')\n      return\n    }\n\n    onCreate(tagTitle)\n  }\n\n  return (\n    <form onSubmit={tagCreated}>\n      <input\n        type=\"text\"\n        ref={$input}\n        placeholder=\"assign tag to the controller\"\n      />\n    </form>\n  )\n}\n","import { Tag } from './Tag'\nimport st from './SuggestedControllerTags.module.css'\n\nexport function SuggestedControllerTags({\n  onSelect,\n  tags,\n  availableTagTitles,\n}) {\n  const assignedTitles = tags.map((t) => t.title)\n\n  return (\n    <div className={st.block}>\n      {availableTagTitles\n        .filter((title) => !assignedTitles.find((t) => t === title))\n        .map((title) => (\n          <Tag key={title} onClick={() => onSelect(title)} background=\"bisque\">\n            {title}\n          </Tag>\n        ))}\n    </div>\n  )\n}\n","import { useGlobalState } from '../state'\nimport { createTag, removeTagFromController } from '../state/actions'\nimport { NewTagForm, TagsList } from './TagsList'\nimport { SuggestedControllerTags } from './SuggestedControllerTags'\n\nimport st from './ControllerItem.module.css'\n\nexport function ControllerItem({ controller, availableTagTitles }) {\n  const [{ selectedGroupId, groups }, dispatch] = useGlobalState()\n  const ownerGroup = groups[controller.group_id]\n\n  const assignTagWithTitleToCtrl = (tagTitle) => {\n    dispatch(createTag(tagTitle, controller.id, selectedGroupId))\n  }\n\n  const canCreate = (tagTitle) => {\n    return controller.tags.find((t) => t.title === tagTitle)\n  }\n\n  const removeTag = (tag) => {\n    dispatch(removeTagFromController(tag.title, controller.id))\n  }\n\n  return (\n    <div className={st.block} key={controller.id}>\n      <h4 className={st.title}>\n        {controller.title}\n        {' - '} <i>{ownerGroup.title}</i>\n      </h4>\n      <div className={st.left}>\n        <h5 className={st.tagsHeading}>Assigned tags:</h5>\n        <TagsList tags={controller.tags} onClose={removeTag} />\n      </div>\n      <div className={st.right}>\n        <h5 className={st.tagsHeading}>Suggested tags:</h5>\n        <SuggestedControllerTags\n          onSelect={assignTagWithTitleToCtrl}\n          tags={controller.tags}\n          availableTagTitles={availableTagTitles}\n        />\n        <NewTagForm canCreate={canCreate} onCreate={assignTagWithTitleToCtrl} />\n      </div>\n    </div>\n  )\n}\n","import { useAvailableTagTitles } from '../hooks/useAvailableTagTitles'\nimport { ControllerItem } from './ControllerItem'\n\nexport default function ControllersList({ controllers }) {\n  const availableTagTitles = useAvailableTagTitles(controllers)\n\n  return (\n    <div>\n      {controllers.map((controller) => (\n        <ControllerItem\n          key={controller.id}\n          controller={controller}\n          availableTagTitles={availableTagTitles}\n        />\n      ))}\n    </div>\n  )\n}\n\n\n","import React, { useRef } from 'react'\nimport { useGlobalState } from '../state'\nimport { createGroup, selectGroup } from '../state/actions'\nimport { randomId } from '../utils'\n\nexport default function GroupsList() {\n  const [{ groups }] = useGlobalState()\n  const topGroup = Object.values(groups).find((g) => !g.parent_id)\n\n  return (\n    <ul>\n      <Group groupId={topGroup.id} />\n    </ul>\n  )\n}\n\nfunction Group({ groupId }) {\n  const $input = useRef()\n  const [{ groups }, dispatch] = useGlobalState()\n  const group = groups[groupId]\n\n  const createSubGroup = (e) => {\n    e.preventDefault()\n    dispatch(createGroup(randomId(), $input.current.value, groupId))\n  }\n\n  const select = (e) => {\n    e.preventDefault()\n    dispatch(selectGroup(groupId))\n  }\n\n  return (\n    <li>\n      <div style={{ display: 'flex' }}>\n        <a href=\"/\" onClick={select} title=\"Click to select\">\n          {group.title}\n        </a>\n\n        <form style={{ marginLeft: '10px' }} onSubmit={createSubGroup}>\n          <input placeholder=\"Add subgroup\" ref={$input} />\n        </form>\n      </div>\n\n      {!!group.children.length && (\n        <ul>\n          {group.children.map((gid) => (\n            <Group groupId={gid} key={gid} />\n          ))}\n        </ul>\n      )}\n    </li>\n  )\n}\n","import { useRef } from 'react'\nimport { createController } from '../state/actions'\nimport { randomId } from '../utils'\nimport { useGlobalState } from '../state'\nimport st from './ControllerForm.module.css'\n\nexport default function ControllerForm() {\n  const [{ selectedGroupId }, dispatch] = useGlobalState()\n  const $input = useRef()\n\n  const addController = (e) => {\n    e.preventDefault()\n\n    dispatch(\n      createController(randomId(), $input.current.value, selectedGroupId)\n    )\n  }\n\n  return (\n    <form className={st.block} onSubmit={addController}>\n      <input\n        type=\"text\"\n        ref={$input}\n        placeholder=\"Add controller to the selected group\"\n      />\n    </form>\n  )\n}\n","import { useGlobalState } from '../state'\nimport ControllersList from './ControllersList'\nimport GroupsList from './GroupsList'\nimport ControllerForm from './ControllerForm'\nimport { useVisibleControllers } from '../hooks/useVisibleControllers'\n\nfunction App() {\n  const [{ groups, selectedGroupId }] = useGlobalState()\n  const selectedGroup = groups[selectedGroupId]\n  const visibleControllers = useVisibleControllers()\n\n  return (\n    <div className=\"App\">\n      <h1>Selected group: {selectedGroup.title}</h1>\n      <GroupsList />\n\n      <h2>Available Controllers</h2>\n      <ControllersList controllers={visibleControllers} />\n      <hr />\n      <ControllerForm />\n    </div>\n  )\n}\n\nexport default App\n","import { useMemo } from 'react'\nimport { useGlobalState } from '../state'\nimport { getGroupControllers } from '../utils'\n\nexport function useVisibleControllers() {\n  const [{ selectedGroupId, groups, controllers }] = useGlobalState()\n\n  const visibleControllers = useMemo(\n    () =>\n      getGroupControllers({\n        selectedGroupId,\n        groups,\n        controllers,\n      }),\n    [selectedGroupId, groups, controllers]\n  )\n\n  return visibleControllers\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport { GlobalStateProvider } from './state'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStateProvider>\n      <App />\n    </GlobalStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}